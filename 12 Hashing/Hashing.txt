All the unordered containers internally use a hash-table 
like structure and ordered containers (maps, multimaps, sets) 
use a tree like  structure.  Unordered Containers have an
average complexity of O(1) for insert, search, delete and ordered 
containers have it as O(LogN) where N is the number of entries 
in the container.

* Maps & Unordered Maps
When to use Unordered Map vs Map?
   - Map operates in O(LogN) time whereas Unordered Map is O(1) on average.
   - Map keeps the data sorted, where unordered map keeps it in random order (due to separate chaining)
   - Map uses a balanced tree like data structure, whereas Unordered Map implements a hash-table with separate chaining.
So if the problem requires you to store key-value pairs in sorted order then use map, otherwise unordered map is better.

* Multimaps & Unordered Multimaps
We also have containers like Multimap, which are useful when there are multiple keys with equivalent value.

* Sets & Unordered Sets
Sets are little different from hashtables, they don't store key-value pairs but can store keys in a sorted order.  
Unordered Sets are faster and work in O(1) time on average. If sorting is not a requirement, then use Unordered Sets.
